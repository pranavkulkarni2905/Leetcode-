import java.util.Arrays;
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        int[] mergedArray = new int[nums1.length + nums2.length];

        double median=0;

        System.arraycopy(nums1, 0, mergedArray, 0, nums1.length);
        System.arraycopy(nums2, 0, mergedArray, nums1.length, nums2.length);

        Arrays.sort(mergedArray);

        int size=mergedArray.length;

        int mid=size/2;
        if(size%2==0){
            median=(mergedArray[mid]+mergedArray[mid-1]) /(float) 2;
            
        }else{
            median=mergedArray[mid];
        }

        return median;

        // ArrayList<Integer> list = new ArrayList<>();
        // for(int i:nums1) list.add(i);
        // for(int i:nums2) list.add(i);   
        // Collections.sort(list); 
        // int size = list.size();
        // //this works for both, odd and even ArrayList size 
        // return (double)(list.get((size-1)/2) + list.get(size/2))/2;
    }
}
